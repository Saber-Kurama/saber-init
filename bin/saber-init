#!/usr/bin/env node
var vfs = require('vinyl-fs');
var fs = require('fs');
var path = require('path');
if (process.argv.length === 3 &&
    (process.argv[2] === '-v') || process.argv[2] === '--version') {
  console.log(require('../package.json').version);
  return;
}
var cwd = path.join(__dirname, '../boilerplate');
var dest = process.cwd();
vfs.src('**/*', {cwd: cwd, cwdbase: true, dot: true})
    .pipe(template(dest))
    .pipe(vfs.dest(dest))
    .on('end', function() {
      fs.renameSync(path.join(dest, 'gitignore'), path.join(dest, '.gitignore'));
      require('../lib/install');
    })
function template(dest) {
  return through.obj(function(file, enc, cb) {
    if (!file.stat.isFile()) {
      return cb();
    }
    console.log('Write %s', simplifyFilename(join(dest, basename(file.path))));
    this.push(file);
    cb();
  });
}
function simplifyFilename(filename) {
  return filename.replace(process.cwd(), ".");
}
